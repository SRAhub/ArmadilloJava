Compute ExpectedLogicColVec(): 
Using input: Col(zeros(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(ones(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(1,1).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(1,1).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(1,2).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(1,2).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(1,5).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(1,5).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(zeros(2,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(ones(2,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(2,1).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(2,1).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(2,2).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(2,2).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(2,5).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(2,5).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(zeros(5,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(ones(5,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(5,1).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(5,1).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(5,2).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(5,2).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(eye(5,5).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Col(hilbertSub(5,5).col(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
done.
Compute ExpectedLogicMat(): 
Using input: Mat(zeros(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(1,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(1,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(1,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(1,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(1,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(1,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(2,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(2,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(2,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(2,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(2,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(2,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(2,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(2,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(2,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(5,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(5,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(5,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(5,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(5,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(5,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(zeros(5,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(ones(5,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Mat(hilbertSub(5,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
done.
Compute ExpectedLogicRowVec(): 
Using input: Row(zeros(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(ones(1,1))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(1,1).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(1,1).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(2,1).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(2,1).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(5,1).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(5,1).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(zeros(1,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(ones(1,2))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(1,2).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(1,2).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(2,2).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(2,2).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(5,2).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(5,2).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(zeros(1,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(ones(1,5))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(1,5).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(1,5).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(2,5).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(2,5).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(eye(5,5).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
Using input: Row(hilbertSub(5,5).row(0))
- Compute expectedAll() ... done.
- Compute expectedAny() ... done.
- Compute expectedFind() ... done.
done.
